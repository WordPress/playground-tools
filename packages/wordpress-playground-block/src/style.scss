.wp-block-wordpress-playground-playground {
	$playground-height: 700px;

	border-radius: 10px;

	* {
		box-sizing: border-box;
	}

	.wordpress-playground-block-button {
		display: flex;
		justify-content: center;
		align-items: center;

		font-size: 16px;
		padding: 6px 12px;
		cursor: pointer;

		svg {
			margin-right: 5px;
		}
	}

	.wordpress-playground-run-button {
		font-size: 20px;
		padding: 12px 14px !important;
		cursor: pointer;
	}

	.screen-reader-text.wordpress-playground-end-of-preview,
	.screen-reader-text.wordpress-playground-end-of-preview:focus {
		top: initial;
		bottom: 5px;
	}

	.wordpress-playground-main-container {
		width: 100%;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;

		.wordpress-playground-content-container {
			width: 100%;
		}
		.wordpress-playground-footer {
			text-align: end;
		}
	}

	.wordpress-playground-content-container {
		display: flex;
		box-shadow: #03254b47 0px 12px 50px 0px;
		overflow: hidden;

		& {
			.code-container {
				display: flex;
				flex-direction: column;
			}

			.playground-container {
				max-width: 100%;
				border: 0;
				position: relative;

				.wordpress-playground-before-preview:focus {
					// The before-preview element exists as a marker for
					// a11y purposes. It is a meaningful place to move the
					// focus before focus is lost as the clicked Activation
					// button disappears. But we do not want the element to
					// be shown when focused.
					z-index: -1;
				}
				.playground-iframe {
					// Set a non-transparent iframe color so the before-preview
					// element behind the iframe is not rendered when the
					// default iframe background is transparent.
					background-color: white;
				}
			}
		}

		&.is-side-by-side {
			flex-direction: row;
			overflow: hidden;

			.code-container {
				flex: 1;
				flex-basis: 50%;
				height: 100%;
				min-height: $playground-height;
			}

			.playground-container {
				flex: 1;
				flex-basis: 50%;
				height: $playground-height;
				max-height: 100%;
			}

			.cm-editor {
				// Override the editor's `position: relative !important` style in order
				// to explicitly set dimensions relative to the positioned editor root.
				position: absolute !important;
				top: 0;
				left: 0;
				bottom: 0;
				right: 0;
				width: 100%;
				height: 100%;
			}
		}

		&.is-one-under-another {
			flex-direction: column;

			.code-container {
				flex-basis: 350px;
			}
			.playground-container {
				width: 100%;
				height: 400px;
				flex-basis: 500px;
			}

			.cm-editor {
				width: 100%;
				height: auto;
				max-height: min(450px, 80vh);
			}
		}
	}

	.is-full-page-view {
		height: 100vh;
		display: flex;
		flex-direction: column;
		flex-wrap: nowrap;

		.wordpress-playground-footer__full-page-link {
			display: none;
		}

		.wordpress-playground-content-container {
			flex-grow: 1;

			&.is-side-by-side {
				.code-container,
				.playground-container {
					min-height: auto;
					height: auto;
				}
			}

			&.is-one-under-another {
				overflow: auto;

				.playground-container {
					flex-basis: 300px;
					flex-grow: 1;
				}
			}
		}
	}

	.wordpress-playground-footer__full-page-link {
		text-decoration: none;
		font-size: 13px;
		margin-inline-start: 11px;

		$northeast-arrow: '\002197';
		$northwest-arrow: '\002196';

		&:after {
			margin-inline-start: 3px;
			content: $northeast-arrow;
		}

		&:dir(rtl):after {
			content: $northwest-arrow;
		}
	}

	.wordpress-playground-footer {
		margin: 4px;

		.wordpress-playground-footer__powered_by_link,
		.wordpress-playground-footer__full-page-link {
			margin: 0 8px;
		}

		.wordpress-playground-footer__full-page-link {
			margin-inline-start: 19px;
		}

		$color: var(--wp--preset--color--contrast);
		$hover-color: var(--wp--preset--color--vivid-cyan-blue);

		.wordpress-playground-footer__powered_by_link,
		.wordpress-playground-footer__powered_text,
		.wordpress-playground-footer__powered_by_link-text {
			color: $color;
			text-decoration: none;
			font-size: 13px;
			display: inline-block;
		}
		.wordpress-playground-footer__powered_text {
			opacity: 0.7;
		}
		.wordpress-playground-footer__powered_by_link {
			.wordpress-playground-footer__spacing {
				display: inline-block;
				width: 0;
				height: 0;
			}
			.wordpress-playground-footer__icon {
				margin: -4px 2px auto 2px;
				fill: $color;
				vertical-align: middle;
			}
			&:hover {
				.wordpress-playground-footer__powered_by_link-text,
				.wordpress-playground-footer__powered_text {
					color: $hover-color;
					opacity: 1;
				}
				.wordpress-playground-footer__icon {
					fill: $hover-color;
				}
			}
		}
	}

	.file-tabs {
		display: flex;
		flex-wrap: wrap;
		align-items: flex-end;
		min-height: 46px;
		background-color: #0c0224;
		color: #fff;
		padding: 6px 10px 0;

		path {
			fill: currentColor;
		}

		.components-spinner {
			margin-top: 0;
		}

		> .file-tab {
			display: flex;
			align-items: center;
			justify-content: center;

			height: 35px;
			padding: 5px 10px;
			margin-right: 5px;
			border-radius: 5px 5px 0 0;
			cursor: pointer;
			font-size: 16px;
			font-weight: bold;
			box-shadow: none;

			&:not(.file-tab-active) {
				background-color: #575757;
			}
		}

		.file-tab-extra {
			background-color: #575757;
			color: #fff;
			font-weight: bold;
			&:hover {
				background-color: #6e6e6e;
			}
			&:focus {
				background-color: #6e6e6e;
			}
			&:active {
				background-color: #6e6e6e;
			}
		}
	}

	.code-editor-wrapper {
		display: flex;
		flex-direction: column;
		flex: 1;
		position: relative;

		> div {
			height: 100%;
			// Make this a "positioned" element so a nested editor element
			// may be absolutely positioned relative to this one.
			position: relative;
			display: flex;
			flex: 1;
		}
	}

	.cm-content {
		white-space: pre-wrap;
	}

	@mixin playground-pane-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}

	.playground-iframe {
		width: 100%;
		height: 100%;
	}

	.playground-activation-placeholder {
		@include playground-pane-overlay;
		display: flex;
		flex-direction: column;
		background-color: #eee;
	}

	.playground-transpilation-failures {
		@include playground-pane-overlay;

		display: flex;
		flex-direction: column;
		padding: 20px;
		background-color: rgba(39, 0, 0, 0.9) !important;
		* {
			color: white !important;
		}
		h3 {
			font-size: 24px !important;
		}
		h1,
		h2,
		h3,
		h4,
		h5,
		h6,
		p {
			margin-top: 10px !important;
			margin-bottom: 10px !important;
		}
		p {
			font-size: 15px !important;
		}
	}

	.wordpress-playground-activate-button {
		// Use !important to defend against this button being
		// incorrectly positioned due to opinionated theme styles.
		margin: auto !important;
		font-size: 20px;
	}

	.actions-bar {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-between;
		max-width: 100vw;
		padding: 10px;
		background-color: #0c0224;
		color: #fff;
	}

	.playground-block-exit-editor-tip {
		cursor: pointer;
		border: 0;
		background: #fff7cc;
		padding: 11px;
		font-size: inherit;
		text-align: left;

		&:focus {
			// Avoid outline on click
			outline: 0;
		}
		&:focus-visible {
			outline: auto;
			// Avoid completely clipped outline
			outline-offset: -2px;
		}

		code {
			// TODO: Is there a good WordPress CSS var for monospace font?
			font-family: monospace;
			border: 1px solid #00000077;
			border-radius: 5px;
			padding: 2px 4px;
			margin: 0px 1px;
		}
	}
}
